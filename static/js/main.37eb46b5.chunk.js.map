{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","TrelloBoard_templateObject","BoardTitle","h2","TrelloBoard_templateObject2","TrelloBoard","onDragEnd","result","destination","source","match","params","listOrder","Button_default","size","react_router_dom","to","color","textDecoration","direction","listCards","components_TrelloList","Thumbnail","BoardThumbnail_templateObject","Title","BoardThumbnail_templateObject2","BoardThumbnail","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","CreateInput","Home_templateObject4","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","components_BoardThumbnail","textAlign","AppRouter","react_router","path","exact","component","Home","App","routes","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37eb46b5.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addList = title => {\r\n  return (dispatch, getState) => {\r\n    const boardID = getState().activeBoard;\r\n    const id = uuid();\r\n    dispatch({\r\n      type: CONSTANTS.ADD_LIST,\r\n      payload: { title, boardID, id }\r\n    });\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return (dispatch, getState) => {\r\n    const boardID = getState().activeBoard;\r\n    dispatch({\r\n      type: CONSTANTS.DRAG_HAPPENED,\r\n      payload: {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n        draggableId,\r\n        type,\r\n        boardID\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newTitle\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteList = listID => {\r\n  return (dispatch, getState) => {\r\n    const boardID = getState().activeBoard;\r\n    return dispatch({\r\n      type: CONSTANTS.DELETE_LIST,\r\n      payload: {\r\n        listID,\r\n        boardID\r\n      }\r\n    });\r\n  };\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  const id = uuid();\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID, id }\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText }\r\n  };\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { id, listID }\r\n  };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\nexport * from \"./boardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\r\n  ADD_BOARD: \"ADD_BOARD\"\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"list-0\": {\r\n    id: \"list-0\",\r\n    cards: [\"card-0\"],\r\n    title: \"myList\",\r\n    board: \"board-0\"\r\n  }\r\n};\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { title, id } = action.payload;\r\n      const newList = {\r\n        title: title,\r\n        id: `list-${id}`,\r\n        cards: []\r\n      };\r\n\r\n      const newState = { ...state, [`list-${id}`]: newList };\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { listID, id } = action.payload;\r\n      const list = state[listID];\r\n      list.cards.push(`card-${id}`);\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = action.payload;\r\n\r\n      // draggin lists around - the listOrderReducer should handle this\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      }\r\n\r\n      // other list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the list where the drag happened\r\n        const listStart = state[droppableIdStart];\r\n        // pull out the card from this list\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        // find the list where the drag ended\r\n        const listEnd = state[droppableIdEnd];\r\n\r\n        // put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: listStart,\r\n          [droppableIdEnd]: listEnd\r\n        };\r\n      }\r\n      return state;\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { listID, id } = action.payload;\r\n\r\n      const list = state[listID];\r\n      const newCards = list.cards.filter(cardID => cardID !== id);\r\n\r\n      return { ...state, [listID]: { ...list, cards: newCards } };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newTitle } = action.payload;\r\n\r\n      const list = state[listID];\r\n      list.title = newTitle;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID } = action.payload;\r\n      const newState = state;\r\n      delete newState[listID];\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"card-0\": {\r\n    text: \"Last Episode\",\r\n    id: `card-0`,\r\n    list: \"list-0\"\r\n  }\r\n};\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { text, listID, id } = action.payload;\r\n\r\n      const newCard = {\r\n        text,\r\n        id: `card-${id}`,\r\n        list: listID\r\n      };\r\n\r\n      return { ...state, [`card-${id}`]: newCard };\r\n    }\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, newText } = action.payload;\r\n      const card = state[id];\r\n      card.text = newText;\r\n      return { ...state, [`card-${id}`]: card };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { id } = action.payload;\r\n      const newState = state;\r\n      delete newState[id];\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-0\": {\r\n    id: \"board-0\",\r\n    lists: [\"list-0\"],\r\n    title: \"First board\"\r\n  }\r\n};\r\n\r\nconst boardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { boardID, id } = action.payload;\r\n      const board = state[boardID];\r\n      const newListID = `list-${id}`;\r\n      const newLists = [...board.lists, newListID];\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const { boardID } = action.payload;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const {\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = action.payload;\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\r\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n        board.lists = lists;\r\n\r\n        return { ...state, [boardID]: board };\r\n      }\r\n      return state;\r\n    }\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID, boardID } = action.payload;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const newLists = lists.filter(id => id !== listID);\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.ADD_BOARD: {\r\n      const { title, id } = action.payload;\r\n      const newID = `board-${id}`;\r\n      const newBoard = {\r\n        id: newID,\r\n        title,\r\n        lists: []\r\n      };\r\n\r\n      return { ...state, [newID]: newBoard };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nconsole.log(uuid());\r\n\r\nconst initialState = [\"board-0\"];\r\n\r\nconst boardOrderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_BOARD: {\r\n      return [...state, `board-${action.payload.id}`];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardOrderReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nconst activeBoardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.SET_ACTIVE_BOARD: {\r\n      return action.payload;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activeBoardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport cardsReducer from \"./cardsReducer\";\r\nimport boardsReducer from \"./boardsReducer\";\r\nimport boardOrderReducer from \"./boardOrderReducer\";\r\nimport activeBoardReducer from \"./activeBoardReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer,\r\n  cards: cardsReducer,\r\n  boards: boardsReducer,\r\n  boardOrder: boardOrderReducer,\r\n  activeBoard: activeBoardReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n  font-family: Roboto, sans-serif;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TrelloForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrelloForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloButton from \"./TrelloButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editCard(id, listID, cardText));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDeleteCard = e => {\r\n    console.log(listID);\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\r\n      </TrelloForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                delete\r\n              </DeleteButton>\r\n\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(TrelloCard);\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrelloOpenForm = ({ list, children, onClick }) => {\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <OpenFormButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}>{children}</p>\r\n    </OpenFormButton>\r\n  );\r\n};\r\n\r\nexport default TrelloOpenForm;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloButton from \"./TrelloButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport TrelloOpenForm from \"./TrelloOpenForm\";\r\n\r\nclass TrelloCreate extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  renderOpenForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      margin-left: 8px;\r\n      width: 300px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n    return (\r\n      <OpenFormButton onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenFormButton>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    const { list } = this.props;\r\n    return this.state.formOpen ? (\r\n      <TrelloForm\r\n        text={text}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n          {list ? \"Add List\" : \"Add Card\"}\r\n        </TrelloButton>\r\n      </TrelloForm>\r\n    ) : (\r\n        <TrelloOpenForm list={list} onClick={this.openForm}>\r\n          {list ? \"Add another list\" : \"Add another card\"}\r\n        </TrelloOpenForm>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect()(TrelloCreate);\r\n","import React, { useState } from \"react\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  font-family: Roboto, sans-serif;\r\n  font-weight: 500;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInput\r\n          type=\"text\"\r\n          value={listTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={handleFinishEditing}\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    dispatch(editTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div>\r\n                <div>\r\n                  {isEditing ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                      <TitleContainer onClick={() => setIsEditing(true)}>\r\n                        <ListTitle>{listTitle}</ListTitle>\r\n                        <DeleteButton onClick={handleDeleteList}>\r\n                          delete\r\n                      </DeleteButton>\r\n                      </TitleContainer>\r\n                    )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <TrelloCard\r\n                      key={card.id}\r\n                      text={card.text}\r\n                      id={card.id}\r\n                      index={index}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <TrelloCreate listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect()(TrelloList);\r\n","import React, { PureComponent } from \"react\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort, setActiveBoard } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport color from \"@material-ui/core/colors/amber\";\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst BoardTitle = styled.h2`\r\n  font-size: 20px;\r\n  color: #333;\r\n  font-weight: 500;\r\n  font-family: 'Roboto', sans-serif;\r\n`;\r\n\r\n// TODO: Fix performance issue\r\n\r\nclass TrelloBoard extends PureComponent {\r\n  componentDidMount() {\r\n    // set active trello board here\r\n    const { boardID } = this.props.match.params;\r\n\r\n    this.props.dispatch(setActiveBoard(boardID));\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists, cards, match, boards } = this.props;\r\n    const { boardID } = match.params;\r\n    const board = boards[boardID];\r\n    if (!board) {\r\n      return <p>Board not found</p>;\r\n    }\r\n    const listOrder = board.lists;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Button variant=\"contained\" size=\"small\">\r\n          <Link to=\"/\" style={{ color: \"black\", textDecoration: \"none\" }}>Back</Link>\r\n        </Button>\r\n        {/* <button><Link to=\"/\">Go Back</Link></button> */}\r\n        <BoardTitle>{board.title}</BoardTitle>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ListsContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map(cardID => cards[cardID]);\r\n\r\n                  return (\r\n                    <TrelloList\r\n                      listID={list.id}\r\n                      key={list.id}\r\n                      title={list.title}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <TrelloCreate list />\r\n            </ListsContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n  boards: state.boards\r\n});\r\n\r\nexport default connect(mapStateToProps)(TrelloBoard);\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const setActiveBoard = id => {\r\n  return {\r\n    type: CONSTANTS.SET_ACTIVE_BOARD,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const addBoard = title => {\r\n  const id = uuid();\r\n  return {\r\n    type: CONSTANTS.ADD_BOARD,\r\n    payload: { title, id }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Thumbnail = styled.div`\r\n  height: 280px;\r\n  width: 280px;\r\n  background: #efefef;\r\n  padding: 10px;\r\n  margin: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px grey;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  color: #333;\r\n  text-decoration: none;\r\n  font-family: Roboto, sans-serif;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst BoardThumbnail = ({ title }) => {\r\n  console.log(title);\r\n  return (\r\n    <Thumbnail>\r\n      <Title>{title}</Title>\r\n    </Thumbnail>\r\n  );\r\n};\r\n\r\nexport default BoardThumbnail;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"../actions\";\r\nimport BoardThumbnail from \"./BoardThumbnail\";\r\n\r\nconst Thumbnails = styled.div`\r\n  flex: 1;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  font-size: 48px;\r\n  color: #333;\r\n  font-weight: bold;\r\n  font-family: 'Roboto', sans-serif;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  width: 400px;\r\n  height: 80px;\r\n  font-size: 22px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n`;\r\n\r\nconst Home = ({ boards, boardOrder, dispatch }) => {\r\n  // this is the home site that shows you your boards and you can also create a Board here.\r\n\r\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    setNewBoardTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addBoard(newBoardTitle));\r\n  };\r\n\r\n  const renderBoards = () => {\r\n    return boardOrder.map(boardID => {\r\n      const board = boards[boardID];\r\n\r\n      return (\r\n        <Link\r\n          key={boardID}\r\n          to={`/${board.id}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <BoardThumbnail {...board} />\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderCreateBoard = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\r\n        <CreateTitle>Create a New Board</CreateTitle>\r\n        <CreateInput\r\n          onChange={handleChange}\r\n          value={newBoardTitle}\r\n          placeholder=\"Your board title...\"\r\n          type=\"text\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <Thumbnails>{renderBoards()}</Thumbnails>\r\n      {renderCreateBoard()}\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  boardOrder: state.boardOrder\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport TrelloBoard from \"../components/TrelloBoard\";\r\nimport Home from \"../components/Home\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/:boardID\" component={TrelloBoard} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { PureComponent } from \"react\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport Routes from \"../routes\";\r\nimport { sort } from \"../actions\";\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    return <Routes />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./store\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport $ from \"jquery\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: #ddd;\r\n    box-sizing: border-box;\r\n    transition: all 0.5s ease-in;\r\n    font: Roboto, sans-serif;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function (e) {\r\n  console.log(\"Removed: \" + e.target.nodeName);\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}